We will create a simple react app that uses a json file to render some movie cards from scratch using webpack and babel, 'create-react-app' will not be used ;).

SUMMARY
SET UP JAVASCRIPT DEVELOPMENT ENVIRONMENT
	1.1 Initialize the project
		We run 'npm init -y' to create a 'package.json' file that will define the project dependencies.

	1.2 Add web pack to the project
		From the docs: "At its core, webpack is a static module bundler for modern JavaScript applications. When webpack processes your application, it internally builds a dependency graph which maps every module your project needs and generates one or more bundles" (https://webpack.js.org/concepts/).

		So "Webpack is a tool that lets you compile JavaScript modules, also known as module bundler. Given a large number of files, it generates a single file (or a few files) that run your app" (https://flaviocopes.com/webpack/).

		This means webpack lets you build javascript applications without worrying too much on dependencies, when you run it, returns a compiled version of your code that you can deploy in a web server and use.
		
		We install it with

			'npm install --save-dev webpack webpack-cli'

		This command installs webpack and its cli as a dev dependency, wich means they won't be included in the production build.

	1.3 Configure webpack
		We need to add webpack in the start and build scripts of the package.json file

			...

			"scripts": {
			    "start": "webpack --mode development",
			    "build": "webpack --mode production",
			    "test": "echo \"Error: no test specified\" && exit 1"
			  }

			...

		'npm start' will run webpack in development
		mode and 'npm build' will run webpack in production mode.

	1.4 Create entry point for the app
		We create a new directory named 'src' and a new file called 'index.js' inside it.

CONFIGURING WEBPACK TO WORK WITH REACT

